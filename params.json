{"name":"Fossil-view","tagline":"A simple set of backbone views","body":"Fossil View\r\n===========\r\n\r\nA set of [Backbone](http://backbonejs.org) base views to speed up\r\ndevelopments.\r\n\r\nThis library can be used as a **standalone component** or as part of a `Fossil`\r\nproject.\r\n\r\nThis package provides the following:\r\n\r\n* A **Collection View** is used to render a collection of model. Design an item\r\n  view and you're done!\r\n* A **Region Manager** is used to split a layout into several smaller views.\r\n\r\nSample Code\r\n-----------\r\n\r\n### A Simple Layout\r\n\r\n``` javascript\r\nvar canvas = new Fossil.Views.RegionManager({\r\n    regions: {\r\n        content: \".content\",\r\n        sidebar: \".sidebar\",\r\n        menubar: \"nav.menu\",\r\n        footer: \"footer\"\r\n    },\r\n    // `template` can either be a function or a string.\r\n    // if `template` is a function, then it is called in view context.\r\n    template: function () {\r\n        return [\r\n            '<nav class=\"menu\"></nav>',\r\n            '<section class=\"sidebar\"></section>',\r\n            '<section class=\"content\"></section>',\r\n            '<footer></footer>'\r\n        ].join('');\r\n    }\r\n});\r\n\r\ncanvas.registerView(new Backbone.View(), \"menu\");\r\ncanvas.registerView(new Backbone.View(), \"sidebar\");\r\ncanvas.registerView(new Backbone.View(), \"content\");\r\ncanvas.registerView(new Backbone.View(), \"footer\");\r\n\r\ncanvas.setElement('body').render();\r\n\r\n// Changing a subview is easy\r\ncanvas.registerView(new Backbone.View(), \"content\");\r\n```\r\n\r\n### Using Collection Views\r\n\r\n\r\n``` javascript\r\n// use a model collection to manage items\r\nvar users = new Backbone.Collection();\r\n\r\nvar userList = new Fossil.Views.Collection({\r\n    tagName: 'ul',\r\n    collection: users,\r\n    // create a view for your items\r\n    itemView: Backbone.View.extend({\r\n        render: function () {\r\n            this.$el.html(this.model.get('name'));\r\n        }\r\n    })\r\n});\r\n\r\nuserList.render().$el.appendTo('body');\r\n\r\nusers.add([\r\n    {name: \"Joe\"},\r\n    {name: \"Kevin\"},\r\n    {name: \"Steeve\"}\r\n]);\r\n\r\n// you can specify an index\r\nusers.add({name: \"Walter\"}, {at: 1});\r\n```\r\n\r\nInstallation\r\n------------\r\n\r\n##### Using `bower`\r\n\r\n    bower install themouette/fossil-view\r\n\r\n##### Using `git`\r\n\r\n    $ git clone git://github.com/themouette/fossil-view.git\r\n    $ npm install\r\n\r\n\r\nInclude Fossil View In Your Project\r\n-----------------------------------\r\n\r\n### Using AMD\r\n\r\nFirst, ensure you have `backbone` and `underscore` in your shim definition, then\r\nset the `fossil/view` path:\r\n\r\n``` javascript\r\nrequire.config({\r\n    paths: {\r\n        'fossil/view': 'path/to/fossil-view/src'\r\n    },\r\n    shim: {\r\n        'backbone': {deps: ['jquery', 'underscore'], exports: 'Backbone'},\r\n        'underscore': {exports: '_'}\r\n    }\r\n});\r\n```\r\n\r\nFrom now on, it is possible to quire the whole Fossil View or only the one you\r\nneed:\r\n\r\n``` javascript\r\ndefine([\r\n    'fossil/view/main'\r\n], function (Views) {\r\n    new Views.Collection();\r\n});\r\n```\r\n\r\nor to use only a part:\r\n\r\n``` javascript\r\ndefine([\r\n    'fossil/view/collection'\r\n], function (CollectionView) {\r\n    new CollectionView();\r\n});\r\n```\r\n\r\n### Including The Whole Script\r\n\r\nIn your HTML, just incude the generated script:\r\n\r\n``` javascript\r\n<html>\r\n    <head>\r\n        <script src=\"path/to/fossil-view/fossil-view.js\" type=\"text/javascript\"></script>\r\n        <script type=\"javascript\">\r\n            new Fossil.Views.Collection();\r\n        </script>\r\n    </head>\r\n    <body>\r\n    </body>\r\n</html>\r\n```\r\n\r\nContributing\r\n------------\r\n\r\nTo run local server, use the `npm start` command.\r\n\r\nTo run the test suite, use the `grunt test` command.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}